1.图的基本知识:
    无向完全图:具有n(n-1)/2条边
    有向完全图: 具有n(n-1)条边
    权:每条边上的数值
    网:带有权的树
    度:顶点v的度是和指和v相关联的边的数目 入度:是以顶点v为头的狐的数目 出度:是以顶点v为尾的狐的数目
         G1 的顶点v1的入度 ID(v1)=1, 出度 OD(v1)=2, 度TD(v1)= ID(v1) + OD(v1) =3。
         一般地,如果顶点 Vi 的度记为 TD(vi),那么一个有n个顶点,e条边的图,满足如下关系:1/2ΣTD(Vi)(从1-n)
    路径:两个顶点之间的距离 路径长度:一条路劲上经过的边或狐的数目
    简单路径:顶点不出现重复  简单回路或简单环:除了第一个顶点和最后一个顶点,其余顶点不重复出现
    连通:无向图中 路径v和v1之间有路径,则是连通的,
    连通图:无向图任意两个顶点之间都有路径
    连通分量:无向图中的极大连通子图
    强连通图:在有向图中,任意一对都存在路径  强连通分量:有向图中的极大强连通子图
    连通图的生成树:一个极小的连通子图,它含有图中全部顶点,但只有足以构成一棵树的n-1条边
    有向树:一个顶点入度为0,其余顶点入度均为1 生成森林:若干棵有向树
2.图的存储结构
    2.1:邻接矩阵
        时间复杂度为O(n*n)
        优点:
            1.便于判断两个顶点之间是否有边,即根据A[i][j]=0或者1来判断;
            2.便于计算各个顶点的度,对于无向图,邻接矩阵第i行元素之和就是顶点i的度;
                                 对于有向图,第i行元素之和就是顶点i的出度,第i列元素之和就是顶点i的入度。
         缺点：
            1.不便于增加和删除顶点
            2.不便于统计边的数目,需要扫描邻接矩阵所有元素才能统计完毕,时间复杂度为O(n*n);
            3.空间复杂度。如果是有向图,n个顶点需要n*n个单元存储边.
                如果是无向图,因其邻接矩阵是对称的,所以对规模较大的邻接矩阵可以采用压缩存储的方法,仅存储下三角和上三角,这样需要n(n-1)/2
                但无论以何种方式压缩,邻接矩阵表示法的空间复杂度均为O(n*n);                        
    2.2:邻接表
        该算法的时间复杂度是O(n+e);
        优点:便于增加和删除点。
             便于统计边的数目,按顶点表顺序扫描所有边表可得到边的数目,时间复杂度为O(n+e);
             空间效率高
        缺点: 不便于判断顶点之间是否有边,要判定vi和vj之间是否有边,就需扫描第i个边表,最坏情况下要耗费O(n)时间。
              不便于计算有向图各个顶点的度
    2.3.0 邻接表
        有向图缺点------缺点:求结点的度困难---十字链表
        无向图缺点------缺点：每条边都要存储两遍---邻接多重表          
    2.3:十字链表:是有向图的另一种链式存储结构,可以看成是有向图的邻接表和逆邻接表结合起来的一种链表
    2.4:邻接多重表:是无向图的另一种链式邻接表示方法
3. 图的遍历
    3.1 DFS深度优先搜索遍历:类似树的先序遍历,借助栈结构来实现
    3.2 BFS广度优先搜索遍历:类似树的层次遍历,借助队列来实现,
    3.3 总结:
            用邻接矩阵存储时,时间复杂度均为O(n*n),用邻接表存储时,时间复杂度均为O(n+e);
4.图的应用
    4.1 最小生成树 
        4.1.1 普里姆算法 prim:归并点:时间复杂度为O(n*n),适合稠密图
        4.1.2 克鲁斯卡尔算法 kruskal:归并边:时间复杂度为O(eloge),适合稀疏图
    4.2 最短路径
        4.2.1  迪杰斯特拉 Dijkstra:求某个源点到其余各顶点的最短路径,求解过程是按路径长度递增的次序产生最短路径.O(n*n)
        4.2.2  弗洛伊德算法 :求每一个顶点之间的最短路径,O(n*n*n)
    4.3 拓扑排序:基于用顶点表示活动的有向图
        有向无环图:一个无环的有向图
        AOV-网:用狐表示活动间的优先关系的有向图称为顶点表示活动的网
     4.4 关键路径
        AOE-网:用边表示活动的网 。带权的有向无环图 
        总结:拓扑排序和关键路径都是有向无环图的应用 时间复杂度都为O(n+e);  